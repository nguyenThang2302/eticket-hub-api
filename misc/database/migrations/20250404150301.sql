-- Create "venues" table
CREATE TABLE `venues` (`id` varchar(16) NOT NULL COMMENT "Unique identifier for the venue", `lang_code` varchar(5) NULL COMMENT "Language code associated with the venue", `name` varchar(255) NOT NULL COMMENT "Name of the venue", `address` varchar(255) NULL COMMENT "Address of the venue", `description` varchar(255) NULL COMMENT "Description of the venue", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the venue was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the venue was last updated", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the venue", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the venue", `deleted_at` datetime NULL COMMENT "Timestamp when the organization was deleted", `deleted_by` varchar(16) NULL COMMENT "Identifier of the user who deleted the organization", PRIMARY KEY (`id`), INDEX `fk_venues_languages` (`lang_code`), CONSTRAINT `fk_venues_languages` FOREIGN KEY (`lang_code`) REFERENCES `languages` (`code`) ON UPDATE CASCADE ON DELETE SET NULL) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for storing venue information";
-- Create "events" table
CREATE TABLE `events` (`id` varchar(16) NOT NULL COMMENT "Unique identifier for the event", `organization_id` varchar(16) NULL COMMENT "Identifier of the organization associated with the event", `venue_id` varchar(16) NULL COMMENT "Identifier of the venue associated with the event", `payment_method_id` varchar(16) NULL COMMENT "Identifier of the payment method associated with the event", `lang_code` varchar(5) NULL COMMENT "Language code associated with the event", `name` varchar(255) NOT NULL COMMENT "Name of the event", `description` text NULL COMMENT "Description of the event", `type` varchar(30) NULL COMMENT "Type of the event", `logo_url` varchar(255) NULL COMMENT "URL of the event's logo", `poster_url` varchar(255) NULL COMMENT "URL of the event's poster", `start_datetime` datetime NOT NULL COMMENT "Start date and time of the event", `status` varchar(10) NULL COMMENT "Status of the event", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the event was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the event was last updated", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the event", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the event", `deleted_at` datetime NULL COMMENT "Timestamp when the organization was deleted", `deleted_by` varchar(16) NULL COMMENT "Identifier of the user who deleted the organization", PRIMARY KEY (`id`), INDEX `fk_events_languages` (`lang_code`), INDEX `fk_events_organizations` (`organization_id`), INDEX `fk_events_venues` (`venue_id`), CONSTRAINT `fk_events_languages` FOREIGN KEY (`lang_code`) REFERENCES `languages` (`code`) ON UPDATE CASCADE ON DELETE SET NULL, CONSTRAINT `fk_events_organizations` FOREIGN KEY (`organization_id`) REFERENCES `organizations` (`id`) ON UPDATE CASCADE ON DELETE SET NULL, CONSTRAINT `fk_events_venues` FOREIGN KEY (`venue_id`) REFERENCES `venues` (`id`) ON UPDATE CASCADE ON DELETE SET NULL) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for storing event information";
-- Create "tickets" table
CREATE TABLE `tickets` (`id` varchar(16) NOT NULL COMMENT "Unique identifier for the ticket", `lang_code` varchar(5) NULL COMMENT "Language code associated with the ticket", `name` varchar(255) NOT NULL COMMENT "Name of the ticket", `price` bigint NOT NULL COMMENT "Price of the ticket", `amount` int NOT NULL COMMENT "Amount of tickets available", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the ticket was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the ticket was last updated", `deleted_at` datetime NULL COMMENT "Timestamp when the ticket was deleted", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the ticket", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the ticket", `deleted_by` varchar(16) NULL COMMENT "Identifier of the user who deleted the ticket", PRIMARY KEY (`id`), INDEX `fk_tickets_languages` (`lang_code`), CONSTRAINT `fk_tickets_languages` FOREIGN KEY (`lang_code`) REFERENCES `languages` (`code`) ON UPDATE CASCADE ON DELETE SET NULL) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for storing ticket information";
-- Create "organization_tickets" table
CREATE TABLE `organization_tickets` (`id` varchar(16) NOT NULL COMMENT "Unique identifier for the organization-ticket relationship", `organization_id` varchar(16) NOT NULL COMMENT "Identifier of the organization", `ticket_id` varchar(16) NOT NULL COMMENT "Identifier of the ticket", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the relationship was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the relationship was last updated", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the relationship", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the relationship", PRIMARY KEY (`id`), INDEX `fk_organization_tickets_organizations` (`organization_id`), INDEX `fk_organization_tickets_tickets` (`ticket_id`), CONSTRAINT `fk_organization_tickets_organizations` FOREIGN KEY (`organization_id`) REFERENCES `organizations` (`id`) ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT `fk_organization_tickets_tickets` FOREIGN KEY (`ticket_id`) REFERENCES `tickets` (`id`) ON UPDATE CASCADE ON DELETE CASCADE) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for associating organizations with tickets";
-- Create "ticket_events" table
CREATE TABLE `ticket_events` (`id` varchar(16) NOT NULL COMMENT "Unique identifier for the ticket-event relationship", `event_id` varchar(16) NOT NULL COMMENT "Identifier of the event", `organization_ticket_id` varchar(16) NOT NULL COMMENT "Identifier of the organization ticket", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the relationship was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the relationship was last updated", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the relationship", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the relationship", PRIMARY KEY (`id`), INDEX `fk_ticket_events_events` (`event_id`), INDEX `fk_ticket_events_organization_tickets` (`organization_ticket_id`), CONSTRAINT `fk_ticket_events_events` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`) ON UPDATE CASCADE ON DELETE CASCADE, CONSTRAINT `fk_ticket_events_organization_tickets` FOREIGN KEY (`organization_ticket_id`) REFERENCES `organization_tickets` (`id`) ON UPDATE CASCADE ON DELETE CASCADE) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for associating tickets with events";
