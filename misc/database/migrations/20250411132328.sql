-- Create "receive_infos" table
CREATE TABLE `receive_infos` (`id` varchar(16) NOT NULL COMMENT "Primary key for the receive_infos table", `name` varchar(255) NULL COMMENT "Name of the receiver", `phone_number` varchar(10) NULL COMMENT "Phone number of the receiver", `email` varchar(255) NULL COMMENT "Email address of the receiver", `created_at` datetime NULL COMMENT "Timestamp when the record was created", `updated_at` datetime NULL COMMENT "Timestamp when the record was last updated", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the record", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the record", PRIMARY KEY (`id`)) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for storing receiver information";
-- Create "orders" table
CREATE TABLE `orders` (`id` varchar(16) NOT NULL COMMENT "Primary key for the orders table", `event_id` varchar(16) NULL COMMENT "Foreign key referencing the event associated with the order", `user_id` varchar(16) NULL COMMENT "Foreign key referencing the user who placed the order", `payment_method_id` varchar(16) NULL COMMENT "Foreign key referencing the payment method used for the order", `receive_info_id` varchar(16) NULL COMMENT "Foreign key referencing the receiver information for the order", `coupon_id` varchar(16) NULL COMMENT "Foreign key referencing the coupon applied to the order", `discount_price` double NULL COMMENT "Discount price applied to the order", `sub_total_price` double NULL COMMENT "Subtotal price before discounts", `total_price` double NULL COMMENT "Total price after discounts", `status` varchar(20) NULL COMMENT "Status of the order (e.g., pending, completed, canceled)", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the order was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the order was last updated", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the order", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the order", PRIMARY KEY (`id`), INDEX `fk_orders_coupons` (`coupon_id`), INDEX `fk_orders_events` (`event_id`), INDEX `fk_orders_payment_methods` (`payment_method_id`), INDEX `fk_orders_receive_infos` (`receive_info_id`), INDEX `fk_orders_users` (`user_id`), CONSTRAINT `fk_orders_coupons` FOREIGN KEY (`coupon_id`) REFERENCES `coupons` (`id`) ON UPDATE CASCADE ON DELETE SET NULL, CONSTRAINT `fk_orders_events` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`) ON UPDATE CASCADE ON DELETE SET NULL, CONSTRAINT `fk_orders_payment_methods` FOREIGN KEY (`payment_method_id`) REFERENCES `payment_methods` (`id`) ON UPDATE CASCADE ON DELETE SET NULL, CONSTRAINT `fk_orders_receive_infos` FOREIGN KEY (`receive_info_id`) REFERENCES `receive_infos` (`id`) ON UPDATE CASCADE ON DELETE SET NULL, CONSTRAINT `fk_orders_users` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON UPDATE CASCADE ON DELETE SET NULL) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for storing order information";
-- Create "payment_orders" table
CREATE TABLE `payment_orders` (`id` varchar(16) NOT NULL COMMENT "Primary key for the payment_orders table", `order_id` varchar(16) NULL COMMENT "Foreign key referencing the order associated with the payment order", `payment_order_id` varchar(255) NULL COMMENT "Identifier for the payment order", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the payment order was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the payment order was last updated", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the payment order", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the payment order", PRIMARY KEY (`id`), INDEX `fk_payment_orders_orders` (`order_id`), CONSTRAINT `fk_payment_orders_orders` FOREIGN KEY (`order_id`) REFERENCES `orders` (`id`) ON UPDATE CASCADE ON DELETE SET NULL) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for storing payment order information";
