-- Create "users" table
CREATE TABLE `users` (`id` varchar(16) NOT NULL COMMENT "Unique identifier for the user", `name` varchar(255) NOT NULL COMMENT "Full name of the user", `avatar_url` varchar(255) NOT NULL COMMENT "URL of the user's avatar", `email` varchar(255) NOT NULL COMMENT "Email address of the user", `password` varchar(255) NULL COMMENT "Password of the user", `is_verified` bool NOT NULL DEFAULT 0 COMMENT "Flag indicating if the user is verified", `role` varchar(16) NOT NULL DEFAULT "USER" COMMENT "Role of the user (USER, ADMIN, PROMOTER, VENUE)", `provider` varchar(10) NOT NULL DEFAULT "LOCAL" COMMENT "Provider of the user (SYSTEM, GOOGLE, FACEBOOK)", `sex` varchar(10) NULL COMMENT "Sex of the user (male, female)", `date_of_birth` date NULL COMMENT "Date of birth of the user", `phone_number` varchar(10) NULL COMMENT "Phone number of the user", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the user was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the user was last updated", `created_by` varchar(255) NULL COMMENT "Identifier of the user who created this user", `updated_by` varchar(255) NULL COMMENT "Identifier of the user who last updated this user", PRIMARY KEY (`id`), UNIQUE INDEX `idx_users_email` (`email`)) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for storing user information";
-- Create "access_tokens" table
CREATE TABLE `access_tokens` (`id` varchar(16) NOT NULL COMMENT "Unique identifier for the access token", `expired_at` datetime NOT NULL COMMENT "Expiration date of the access token", `user_id` varchar(16) NOT NULL COMMENT "Foreign key referencing the user associated with the access token", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the access token was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the access token was last updated", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the record.", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the record.", PRIMARY KEY (`id`), INDEX `fk_access_tokens_users` (`user_id`), CONSTRAINT `fk_access_tokens_users` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON UPDATE NO ACTION ON DELETE CASCADE) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for storing access tokens";
-- Create "refresh_tokens" table
CREATE TABLE `refresh_tokens` (`id` varchar(16) NOT NULL COMMENT "Unique identifier for the refresh token", `expired_at` datetime NOT NULL COMMENT "Expiration date of the refresh token", `user_id` varchar(16) NOT NULL COMMENT "Foreign key referencing the user associated with the refresh token", `access_token_id` varchar(16) NULL COMMENT "Foreign key referencing the access token associated with the refresh token", `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "Timestamp when the refresh token was created", `updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Timestamp when the refresh token was last updated", `created_by` varchar(16) NULL COMMENT "Identifier of the user who created the record.", `updated_by` varchar(16) NULL COMMENT "Identifier of the user who last updated the record.", INDEX `fk_refresh_tokens_users` (`user_id`), UNIQUE INDEX `idx_refresh_tokens_access_token_id` (`access_token_id`), CONSTRAINT `fk_refresh_tokens_access_tokens` FOREIGN KEY (`access_token_id`) REFERENCES `access_tokens` (`id`) ON UPDATE NO ACTION ON DELETE SET NULL, CONSTRAINT `fk_refresh_tokens_users` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON UPDATE NO ACTION ON DELETE CASCADE) CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT "Table for storing refresh tokens";
